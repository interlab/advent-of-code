#!/usr/bin/env raku

#`(((
--- Часть вторая ---
По вашим подсчетам, запланированный курс не имеет смысла. Вы находите руководство по подводной лодке
и обнаруживаете, что процесс на самом деле немного сложнее.

В дополнение к горизонтальному положению и глубине вам также необходимо отслеживать третье значение, цель,
которое также начинается с 0. Команды также означают нечто совершенно иное, чем вы думали вначале:
    down X увеличивает вашу цель на X единиц.
    up X уменьшает вашу цель на X единиц.
    forward X делает две вещи:
        Это увеличивает ваше горизонтальное положение на X единиц.
        Он увеличивает вашу глубину на вашу цель, умноженную на X.

Опять же, обратите внимание, что, поскольку вы находитесь на подводной лодке, движение вниз и вверх делает
противоположное тому, что вы могли бы ожидать: «вниз» означает наведение в положительном направлении.

Теперь в приведенном выше примере происходит нечто иное:
    Вперед 5 добавляет 5 к вашему горизонтальному положению, всего 5. Поскольку ваша цель равна 0, ваша глубина не меняется.
    вниз 5 добавляет 5 к вашей цели, в результате получается значение 5.
    Вперед 8 добавляет 8 к вашему горизонтальному положению, всего 13. Поскольку ваша цель равна 5,
    ваша глубина увеличивается на 8 * 5 = 40.
    up 3 уменьшает вашу цель на 3, в результате получается значение 2.
    вниз 8 добавляет 8 к вашей цели, в результате получается значение 10.
    Вперед 2 добавляет 2 к вашему горизонтальному положению, итого 15. Поскольку ваша цель равна 10,
    ваша глубина увеличивается на 2 * 10 = 20 до 60.

После выполнения этих новых инструкций у вас будет горизонтальное положение 15 и глубина 60. (Умножение их дает 900.)

Используя эту новую интерпретацию команд, вычислите горизонтальное положение и глубину,
которые у вас будут после следования запланированному курсу. Что вы получите,
если умножите свое окончательное горизонтальное положение на конечную глубину?
)))

#my $filename = 'input-day-2-test.txt';
my $filename = 'input-day-2.txt';

my @items = $?FILE.IO.dirname.IO.add($filename).slurp.trim.lines;
#say @items;

my ($x, $y, $z) = 0, 0, 0;

for @items {
    my ($it, $num) = $_.split(' ');
    $num .= Int;
    given $it {
        when 'forward' { $x += $num; $y += $z * $num; }
        when 'down' { $z += $num; }
        when 'up' { $z -= $num; }
    }
    # say $it, ' ', $num, ' x:', $x, ' y:', $y, ' z:', $z;
}

say 'Answer: ', $x * $y; # Answer (test): 900
                         # Answer: 1620141160

say 'Time execution: ', now - INIT now;
